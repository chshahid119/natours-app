@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(-100); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(2rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* We use that property just b ecause of the shake of animation therefore we hide element to get rid of this  */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* these are all properties for custom animations  */
    /* animation-name: moveInLeft;
    animation-duration: 0.1s;
    animation-delay: 1s;
    animation-iteration-count: 3;
    animation-timing-function: ease-out; */
    /* short hand property for all of these animations  */
    /* syntax-->animation: animation-name animation-duration animation-timing-function  */
    animation: moveInLeft 1s ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scale(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    content: "";
    background-color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* last is animationn delay*/
  animation-fill-mode: backwards; }

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /* -------------------------------------------------- */
  /* clip-path notes by Yahoo Baba Youtube video */
  /* To make circle shape  */
  /* syntax:--> circle(radiusOrCircleSize% at PositionAlongX-axis% PositionAlongY-axis% ) */
  /* clip-path: circle(20% at 50% 50%); it creates 20% radius circle from x-axis=50 and y-axis=50 */
  /* To make ellipse shape  */
  /* Syntax:-->ellise(radiusFromHorizontal radiusFromVertical at postionAlongX-axis positionAlongY-axis) */
  /* clip-path: ellipse(5% 30% at 50% 50%); it creates ellipse shape  along x-axis=50% y-axis=50% mean from center */
  /* To make rectangle shape  */
  /* syntax---> inset(top% right% bottom% left%)  */
  /* clip-path: inset(40% 20% 40% 40%); */
  /* To make polygon shape */
  /* syntax---> polygon(HideFromX-axis HideFromY-axis,HideFromX-axis HideFromY-axis,HideFromX-axis HideFromY-axis,HideFromX-axis HideFromY-axis)  */
  /* clip-path: polygon(0 0, 100% 0, 100% 200px, 0 100%); */
  /* -------------------------------------------------- */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
